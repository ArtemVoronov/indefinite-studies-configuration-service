apiVersion: apps/v1
kind: Deployment
metadata:
  name: indefinite-studies-profiles-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: indefinite-studies-profiles-service
  template:
    metadata:
      labels:
        app: indefinite-studies-profiles-service
    spec:
      containers:
        - name: indefinite-studies-profiles-service
          image: indefinite-studies-profiles-service:{{ .Values.global.version.profiles }}
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: {{ .Values.global.ports.inner.rest }}
              name: rest-port
            - containerPort: {{ .Values.global.ports.inner.grpc }}
              name: grpc-port     
          volumeMounts:
            - name: log-output
              mountPath: /tmp/
        - name: profiles-beat-auto
          image: elastic/filebeat:7.8.0
          env:
            - name: LOGSTASH_HOSTS
              value: "{{ .Values.global.hostIp }}:{{ .Values.global.ports.external.logstash }}"
          args: [
            "-c", "/etc/filebeat/filebeat.yml",
            "-e"
          ]
          volumeMounts:
          - name: log-output
            mountPath: /tmp/
          - name: profiles-beat-config
            mountPath: /etc/filebeat/
      initContainers:
        - name: wait-for-pg
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz ${POD_NAME}.${POD_NAMESPACE} {{ .Values.global.ports.inner.postgres }}; do echo "Waiting for postgres..."; sleep 90; done;']
          env:
            - name: POD_NAME
              value: indefinite-studies-profiles-service-postgres
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        - name: indefinite-studies-profiles-service-liquibase
          image: indefinite-studies-profiles-service-liquibase:{{ .Values.global.version.profiles }}
          env:
            - name: DATABASE_USER
              value: "indefinite_studies_profiles_service_user"
            - name: DATABASE_PASSWORD
              value: "password"
            - name: DATABASE_URL
              value: "jdbc:postgresql://indefinite-studies-profiles-service-postgres:{{ .Values.global.ports.inner.postgres }}/indefinite_studies_profiles_service_db"
      volumes:
        - name: log-output
          emptyDir: {}
        - name: profiles-beat-config
          configMap:
            name: profiles-beat-config
            items:
              - key: filebeat.yml
                path: filebeat.yml